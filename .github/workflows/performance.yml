name: Performance Tests

on:
  pull_request:
    branches: [main]
    paths:
      - 'src/**'
      - 'package*.json'

jobs:
  performance:
    name: Performance Benchmarks
    runs-on: ubuntu-latest

    permissions:
      issues: write
      pull-requests: write
      contents: read

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: altus4_perf
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Run performance benchmarks
        run: npm run test:performance
        env:
          NODE_ENV: test
          DB_HOST: localhost
          DB_PORT: 3306
          DB_USERNAME: root
          DB_PASSWORD: root
          DB_DATABASE: altus4_perf
          REDIS_HOST: localhost
          REDIS_PORT: 6379

      - name: Comment PR with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            if (fs.existsSync('performance-results.json')) {
              const results = JSON.parse(fs.readFileSync('performance-results.json', 'utf8'));

              const body = `## Performance Test Results

              | Metric | Value | Status |
              |--------|-------|--------|
              | Average Response Time | ${results.avgResponseTime}ms | ${results.avgResponseTime < 100 ? '✅' : '⚠️'} |
              | Throughput | ${results.throughput} req/s | ${results.throughput > 500 ? '✅' : '⚠️'} |
              | Memory Usage | ${results.memoryUsage}MB | ${results.memoryUsage < 512 ? '✅' : '⚠️'} |

              ${results.avgResponseTime > 200 ? '⚠️ **Warning**: Response times are higher than expected' : ''}
              `;

              try {
                await github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: body
                });
                console.log('Added performance results comment');
              } catch (error) {
                console.error('Failed to add performance comment:', error.message);
              }
            }
